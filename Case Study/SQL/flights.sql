CREATE TABLE flights (
	TRANSACTIONID INTEGER PRIMARY KEY,
	FLIGHTDATE DATE,
	AIRLINECODE TEXT,
	AIRLINENAME TEXT,
	TAILNUM TEXT,
	FLIGHTNUM INTEGER,
	ORIGINAIRPORTCODE TEXT,
	ORIGAIRPORTNAME TEXT,
	ORIGINCITYNAME TEXT,
	ORIGINSTATE TEXT,
	ORIGINSTATENAME TEXT,
	DESTAIRPORTCODE TEXT,
	DESTAIRPORTNAME TEXT,
	DESTCITYNAME TEXT,
	DESTSTATE TEXT,
	DESTSTATENAME TEXT,
	CRSDEPTIME INTEGER,
	DEPTIME INTEGER,
	DEPDELAY INTEGER,
	TAXIOUT INTEGER,
	WHEELSOFF INTEGER,
	WHEELSON INTEGER,
	TAXIIN INTEGER,
	CRSARRTIME INTEGER,
	ARRTIME INTEGER,
	ARRDELAY INTEGER,
	CRSELAPSEDTIME INTEGER,
	ACTUALELAPSEDTIME INTEGER,
	CANCELLED TEXT,
	DIVERTED TEXT,
	DISTANCE TEXT
);

-- To delete all rows, restart the row_number
TRUNCATE flights
RESTART IDENTITY;

-- Copy all data from flights.txt
\copy flights FROM 'D:\flights.txt' DELIMITER '|' CSV HEADER;

-- Check the first 5 records
SELECT * FROM flights LIMIT 5;

SELECT * FROM flights 
WHERE transactionid IN (54548800, 55872300, 54388800, 54486500, 55878700, 54380600);

-- Change 'cancelled' and 'diverted' to BOOLEAN data type
UPDATE flights
SET cancelled = CASE WHEN LOWER(cancelled) IN ('f', '0', 'false') THEN false ELSE true END,
    diverted  = CASE WHEN LOWER(cancelled) IN ('f', '0', 'false') THEN false ELSE true END;

ALTER TABLE flights
ALTER COLUMN cancelled TYPE BOOLEAN USING cancelled::boolean,
ALTER COLUMN diverted TYPE BOOLEAN USING diverted::boolean;

-- DISTINCT values for each column
SELECT * FROM flights LIMIT 5;

-- Booking
SELECT COUNT(DISTINCT transactionid) FROM flights; -- 1191805
SELECT COUNT(DISTINCT flightdate) FROM flights; -- 1902

-- Airline
SELECT COUNT(DISTINCT airlinename) FROM flights; -- 26
SELECT COUNT(DISTINCT airlinecode) FROM flights; -- 26

-- ORIGIN
SELECT COUNT(DISTINCT originairportcode) FROM flights; -- 363
SELECT COUNT(DISTINCT origairportname) FROM flights; -- 363

SELECT COUNT(DISTINCT origincityname) FROM flights; -- 344

SELECT COUNT(DISTINCT originstate) FROM flights; -- 51
SELECT COUNT(DISTINCT originstatename) FROM flights; -- 51

-- DESTINATION
SELECT COUNT(DISTINCT destairportcode) FROM flights; -- 364
SELECT COUNT(DISTINCT destairportname) FROM flights; -- 364

SELECT COUNT(DISTINCT destcityname) FROM flights; -- 345

SELECT COUNT(DISTINCT deststate) FROM flights; -- 51
SELECT COUNT(DISTINCT deststatename) FROM flights; -- 51


--
SELECT COUNT(DISTINCT crsdeptime) FROM flights; -- 1344
SELECT COUNT(DISTINCT deptime) FROM flights; -- 1412
SELECT COUNT(DISTINCT depdelay) FROM flights; -- 691
SELECT COUNT(DISTINCT taxiout) FROM flights; -- 254
SELECT COUNT(DISTINCT wheelsoff) FROM flights; -- 1406
SELECT COUNT(DISTINCT wheelson) FROM flights; -- 1439

SELECT COUNT(DISTINCT taxiin) FROM flights; -- 189
SELECT COUNT(DISTINCT crsarrtime) FROM flights; -- 1433

SELECT COUNT(DISTINCT arrtime) FROM flights; -- 1440
SELECT COUNT(DISTINCT arrdelay) FROM flights; -- 704

SELECT COUNT(DISTINCT crselapsedtime) FROM flights; -- 599
SELECT COUNT(DISTINCT actualelapsedtime) FROM flights; -- 645


SELECT COUNT(DISTINCT cancelled) FROM flights; -- 2
SELECT COUNT(DISTINCT diverted) FROM flights; -- 2
SELECT COUNT(DISTINCT distance) FROM flights; -- 1706



-- WHERE distance = '370 miles' LIMIT 1;

SELECT COUNT (DISTINCT (TAILNUM,FLIGHTNUM, FLIGHTDATE, ORIGINAIRPORTCODE)) FROM flights; -- 1159816
SELECT COUNT (*) FROM flights; -- 1191805
SELECT COUNT (DISTINCT (TRANSACTIONID)) FROM flights; -- 1191805

SELECT COUNT (DISTINCT (DEPTIME)) FROM flights; -- 1412
SELECT COUNT (DISTINCT (FLIGHTDATE, FLIGHTNUM, DEPTIME)) FROM flights; -- 1191254

SELECT COUNT (DISTINCT (TRANSACTIONID)) FROM flights; -- 1191805

SELECT COUNT(DISTINCT(FLIGHTNUM)) FROM flights; -- 8034
SELECT COUNT(DISTINCT(TAILNUM)) FROM flights; -- 12869



SELECT * FROM FLIGHTS 
WHERE FLIGHTNUM = 1425 AND 
ORIGINAIRPORTCODE = 'BWI' AND 
AIRLINECODE = 'DL' 
ORDER BY FLIGHTDATE;

SELECT DEPDELAY, CASE WHEN DEPDELAY<=15 THEN 0 ELSE 1 END AS DEPDELAYGT15
FROM FLIGHTS
LIMIT 100;

SELECT TRANSACTIONID, DEPTIME, ARRTIME, CASE WHEN DEPTIME-ARRTIME < 0 THEN 0 ELSE 1 END AS NEXTDAYARR 
FROM FLIGHTS
WHERE TRANSACTIONID IN (58462200, 68865100, 70328700, 70304300)
LIMIT 100;

SELECT TAILNUM, COALESCE(SUBSTRING(TAILNUM FROM '[a-zA-Z0-9]+'), 'UNKNOW'), CASE WHEN DEPTIME-ARRTIME < 0 
				OR ARRTIME ISNULL OR DEPTIME ISNULL 
				THEN 0 ELSE 1 END AS NEXTDAYARR 
FROM FLIGHTS
LIMIT 100;

SELECT * FROM FLIGHTS WHERE
CRSDEPTIME
ISNULL;


-------- CREATE AND POPULATE TABLES -------
DROP TABLE FACT_FLIGHTS;

CREATE TABLE FACT_FLIGHTS
(	TRANSACTIONID INTEGER PRIMARY KEY,
	FLIGHTDATE DATE,
	AIRLINECODE TEXT,
	TAILNUM TEXT,
	FLIGHTNUM INTEGER,
	ORIGINAIRPORTCODE TEXT,
	DESTAIRPORTCODE TEXT,
	CANCELLED BOOL,
	DIVERTED BOOL
);

INSERT INTO FACT_FLIGHTS
SELECT
	TRANSACTIONID,
	FLIGHTDATE,
	AIRLINECODE,
	COALESCE(SUBSTRING(TAILNUM FROM '[a-zA-Z0-9]+'), 'UNKNOW') AS TAILNUM,
	FLIGHTNUM,
	ORIGINAIRPORTCODE,
	DESTAIRPORTCODE,
	CASE WHEN CANCELLED IN ('f', '0', 'false') THEN FALSE ELSE TRUE END AS CANCELLED,
	CASE WHEN DIVERTED IN ('f', '0', 'false') THEN FALSE ELSE TRUE END AS DIVERTED
FROM FLIGHTS
ORDER BY TRANSACTIONID;

SELECT * FROM FACT_FLIGHTS;
------------------------------------------
DROP TABLE FACT_FLIGHTRUNWAY;

CREATE TABLE FACT_FLIGHTRUNWAY
(	TRANSACTIONID INTEGER PRIMARY KEY,
	CRSDEPTIME INTEGER,
	DEPTIME INTEGER,
	DEPDELAY INTEGER,
	TAXIOUT INTEGER,
	WHEELSOFF INTEGER,
	WHEELSON INTEGER,
	TAXIIN INTEGER,
	CRSARRTIME INTEGER,
	ARRTIME INTEGER,
	ARRDELAY INTEGER,
	CRSELAPSEDTIME INTEGER,
	ACTUALELAPSEDTIME INTEGER,
	DISTANCE TEXT,
	DISTANCEGROUP TEXT,
	DEPDELAYGT15 INTEGER,
	NEXTDAYARR INTEGER
);

INSERT INTO FACT_FLIGHTRUNWAY
SELECT
	TRANSACTIONID,CRSDEPTIME,DEPTIME,DEPDELAY,TAXIOUT,WHEELSOFF,WHEELSON,TAXIIN,
	CRSARRTIME,ARRTIME,ARRDELAY,CRSELAPSEDTIME,ACTUALELAPSEDTIME,DISTANCE,
	CASE WHEN CAST(SUBSTRING(DISTANCE FROM ('[0-9]+')) AS INT) <= 100 THEN '0-100 miles'
	WHEN CAST(SUBSTRING(DISTANCE FROM ('[0-9]+')) AS INT) >= 10001 THEN '10000+ miles'
	WHEN LENGTH(SUBSTRING(DISTANCE FROM ('[0-9]+'))) = 3 THEN
	CASE 
		WHEN SUBSTRING(SUBSTRING(DISTANCE FROM ('[0-9]+')), 2, 2) LIKE '00' THEN
		CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{1}')) AS INT) - 1) AS TEXT) || '01-' ||
		CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{1}')) AS INT)) AS TEXT) || '00 miles'
		ELSE
		SUBSTRING(DISTANCE FROM ('[0-9]{1}')) || '01-' ||
		CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{1}')) AS INT)+1) AS TEXT) || '00 miles'
	END
	WHEN SUBSTRING(SUBSTRING(DISTANCE FROM ('[0-9]+')), 2, 3) LIKE '_00' THEN
	CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{2}')) AS INT) - 1) AS TEXT) || '01-' ||
	CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{2}')) AS INT)) AS TEXT) || '00 miles'
	ELSE
	SUBSTRING(DISTANCE FROM ('[0-9]{2}')) || '01-' ||
	CAST((CAST(SUBSTRING(DISTANCE FROM ('[0-9]{2}')) AS INT)+1) AS TEXT) || '00 miles'
	END
	AS DISTANCEGROUP,
	CASE WHEN DEPDELAY<=15 THEN 0 ELSE 1 END AS DEPDELAYGT15,
	CASE WHEN DEPTIME-ARRTIME < 0 
				OR ARRTIME ISNULL OR DEPTIME ISNULL 
				THEN 0 ELSE 1 END AS NEXTDAYARR
FROM FLIGHTS
ORDER BY TRANSACTIONID;

SELECT * FROM FACT_FLIGHTRUNWAY;
-----------------------------------
DROP TABLE DIM_AIRLINES;

CREATE TABLE DIM_AIRLINES
(	AIRLINECODE TEXT PRIMARY KEY,
	AIRLINENAME TEXT
);

INSERT INTO DIM_AIRLINES
SELECT DISTINCT
	AIRLINECODE,
	SUBSTRING(AIRLINENAME FROM '.*(?=\:)') AS AIRLINENAME
FROM FLIGHTS
ORDER BY AIRLINECODE;

SELECT DISTINCT	AIRLINECODE FROM FLIGHTS; -- 26
SELECT * FROM DIM_AIRLINES; -- 26
------------------------------------------
DROP TABLE DIM_AIRPORTS;

CREATE TABLE DIM_AIRPORTS
(	AIRPORTCODE TEXT PRIMARY KEY,
	AIRPORTNAME TEXT,
	CITYNAME TEXT,
	STATE TEXT,
	STATENAME TEXT
);

INSERT INTO DIM_AIRPORTS
SELECT DISTINCT	
	DESTAIRPORTCODE AS AIRPORTCODE,
	SUBSTRING(DESTAIRPORTNAME FROM '(?<=\: ).*') AS AIRPORTNAME,
	DESTCITYNAME AS CITYNAME,
	DESTSTATE AS STATE,
	DESTSTATENAME AS STATENAME
FROM FLIGHTS
ORDER BY DESTAIRPORTCODE;

SELECT * FROM DIM_AIRPORTS; -- 364
SELECT DISTINCT	DESTAIRPORTCODE FROM FLIGHTS; --364
SELECT DISTINCT	ORIGINAIRPORTCODE FROM FLIGHTS; --363
------------------------------------------

-- VIEW
CREATE VIEW VW_FLIGHTS AS
(	SELECT
FF.TRANSACTIONID,
FR.DISTANCEGROUP,
FR.DEPDELAYGT15,
FR.NEXTDAYARR,
AR.AIRLINENAME,
AP.ORIGAIRPORTNAME,
AP.DESTAIRPORTNAME
FROM FACT_FLIGHTS FF
OUTER JOIN FACT_FLIGHTRUNWAY FR ON FF.TRANSACTIONID = FR.TRANSACTIONID
OUTER JOIN DIM_AIRPORTS AP ON FF.ORIGINAIRPORTCODE = AP.AIRPORTCODE
OUTER JOIN DIM_AIRLINES AR ON FF.AIRLINECODE = AR.AIRLINECODE
);

CREATE OR REPLACE VIEW VW_FLIGHTS AS
(	SELECT
	FF.TRANSACTIONID,
 	(SELECT F.DISTANCE FROM FLIGHTS F WHERE F.TRANSACTIONID = FF.TRANSACTIONID) AS DISTANCE,
	FR.DISTANCEGROUP,
 	FR.DEPDELAY,
 	FR.ARRDELAY,
	FR.DEPDELAYGT15,
	FR.NEXTDAYARR,
	(SELECT AR.AIRLINENAME FROM DIM_AIRLINES AR WHERE FF.AIRLINECODE = AR.AIRLINECODE),
	(SELECT AP.AIRPORTNAME FROM DIM_AIRPORTS AP WHERE FF.ORIGINAIRPORTCODE = AP.AIRPORTCODE) AS ORIGAIRPORTNAME,
	(SELECT AP.AIRPORTNAME FROM DIM_AIRPORTS AP WHERE FF.DESTAIRPORTCODE = AP.AIRPORTCODE) AS DESTAIRPORTNAME,
 	(SELECT AP.STATE FROM DIM_AIRPORTS AP WHERE FF.ORIGINAIRPORTCODE = AP.AIRPORTCODE) AS ORIGINSTATE,
 	(SELECT AP.STATE FROM DIM_AIRPORTS AP WHERE FF.DESTAIRPORTCODE = AP.AIRPORTCODE) AS DESTSTATE,
 	FF.CANCELLED,
 	FF.DIVERTED
	FROM FACT_FLIGHTS FF
	JOIN FACT_FLIGHTRUNWAY FR 
	ON FF.TRANSACTIONID = FR.TRANSACTIONID 
);
-- DROP VIEW VW_FLIGHTS;
SELECT * FROM VW_FLIGHTS LIMIT 100;